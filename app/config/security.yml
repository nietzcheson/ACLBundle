security:

    firewalls:
        login:
            pattern:    ^/login$
            anonymous: ~

        secured_area:
            pattern:    ^/
            form_login:
              login_path:  login
              check_path:  login_check
              csrf_provider: form.csrf_provider
            logout: ~

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Descomenta la siguiente línea para proteger también
        # la propia URL /admin
        # - { path: ^/admin$, roles: ROLE_ADMIN }

    providers:
      chain_provider:
        chain:
          providers: ["in_memory", "user_provider", "user_db"]
          #providers: ["in_memory", "user_provider"]

      in_memory:
          memory:
              users:
                  ryan:  { password: 7110eda4d09e062aa5e4a390b0a572ac0d2c0220, roles: 'ROLE_USER' }
                  # foo
                  test: { password: f7fbba6e0636f890e56fbbf3283e524c6fa3204ae298382d624741d0dc6638326e282c41be5e4254d8820772c5518a2c5a8c0c7f7eda19594a7eb539453e1ed7, roles: 'ROLE_ADMIN' }

      user_provider:
            id: user_provider

      user_db:
        entity: { class: ACL\ACLBundle\Entity\Usuarios, property: username }

    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm:   sha512
            iterations: 1
            encode_as_base64: false

        ACL\ACLBundle\Entity\Usuarios:
            algorithm:        sha512
            encode_as_base64: false
            iterations:       3

        ACL\ACLBundle\Service\UserEntityService:
            algorithm:        sha512
            encode_as_base64: false
            iterations:       3
