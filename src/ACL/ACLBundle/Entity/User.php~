<?php

namespace ACL\ACLBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;


/**
 * User
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="ACL\ACLBundle\Entity\UserRepository")
 */
class User implements UserInterface, \Serializable
{
  /**
  * @ORM\Column(type="integer")
  * @ORM\Id
  * @ORM\GeneratedValue(strategy="AUTO")
  */
  private $id;

  /**
  * @ORM\Column(type="string", length=25, unique=true)
  */
  private $username;

  /**
  * @ORM\Column(type="string", length=32)
  */
  private $salt;

  /**
  * @ORM\Column(type="string", length=255)
  */
  private $password;

  /**
  * @ORM\Column(type="string", length=60, unique=true)
  */
  private $email;

  /**
  * @ORM\Column(name="is_active", type="boolean")
  */
  private $isActive;

  public function __construct()
  {
    $this->isActive = true;
    $this->salt = md5(uniqid(null, true));
  }

  /**
  * @inheritDoc
  */
  public function getUsername()
  {
    return $this->username;
  }

  /**
  * @inheritDoc
  */
  public function getSalt()
  {
    return $this->salt;
  }

  /**
  * @inheritDoc
  */
  public function getPassword()
  {
    return $this->password;
  }

  /**
  * @inheritDoc
  */
  public function getRoles()
  {
    return array('ROLE_USER');
  }

  /**
  * @inheritDoc
  */
  public function eraseCredentials()
  {
  }

  /**
  * @inheritDoc
  */
  public function equals(UserInterface $user)
  {
    return $this->id === $user->getId();
  }

  /**
  * @see \Serializable::serialize()
  */
  public function serialize()
  {
    return serialize(array(
    $this->id,
    ));
  }

  /**
  * @see \Serializable::unserialize()
  */
  public function unserialize($serialized)
  {
    list (
    $this->id,
    ) = unserialize($serialized);
  }

}
